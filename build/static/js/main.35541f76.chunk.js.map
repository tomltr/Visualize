{"version":3,"sources":["components/Navbar/Navbar.Component.js","components/Products/Product.Component.js","components/Products/Products.Component.js","components/Order/OrderItem.Component.js","components/Order/Orders.Component.js","components/Cart/CartItem.Component.js","components/Order/OrderForm.Component.js","components/Products/ProductDetail.Component.js","components/Products/AddProduct.Component.js","components/Authentication/Login.Component.js","components/Authentication/Register.Component.js","components/Authentication/Logout.Component.js","components/Cart/Cart.Component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","this","props","current_user","token","key","Component","Product","title","id","src","image","width","height","alt","price","Products","_isMounted","state","products","axios","get","then","response","setState","data","map","product","catch","error","console","log","product_id","artist","artist_id","product_title","image_path","React","OrderItem","order_items","showDetails","toggleShowDetails","bind","order_id","result","item","order_item_id","quantity","status","total","onClick","Order","params","style","textAlign","index","Cart","updateCart","deleteFromCart","e","preventDefault","newQuantity","parseInt","target","value","quantityLabel","document","getElementById","existingError","createElement","innerHTML","setAttribute","parentElement","insertBefore","nextSibling","removeChild","updateQuantity","deleteItem","onSubmit","type","name","placeholder","OrderForm","cart_items","redirectToOrders","onSubmitOrderForm","numbersOnly","maxCreditNumberSize","cart_id","parseFloat","toFixed","input","size","length","i","charAt","charCodeAt","creditCard","validCreditCard","validSize","totalHeader","currentUser","paymentMethod","creditCardNumber","validateCreditCard","cartId","post","user","payment_method","credit_card_number","clearCart","alert","cart_item_id","ProductDetail","match","date_created","addToCart","username","split","action","AddProduct","productImage","redirectToHome","onFileChange","onFormSubmit","validateTitle","validateImage","validatePrice","uploadedError","files","titleLabel","titleInput","priceLabel","priceInput","imageLabel","imageInput","uploaded","errorMessage","formData","FormData","append","hasOwnProperty","existingProduct","method","encType","onFocus","clearError","onChange","Login","submitLogin","userNotExists","invalidLogin","password","result_token","result_id","user_id","updateAuth","usernameInput","required","Register","register","validateAddress","validateUsername","validateEmail","validatePassword","validateConfirmedPassword","existingUsername","existingEmail","validMin","validChars","validMax","validateName","maxSize","siblingNode","nodeName","fullNameInput","minRequired","charactersOnly","maxRequired","addressInput","emailInput","phoneNumberInput","onlyNumbers","valid","validNumber","numericAlpha","alphaNumeric","minEmail","passwordInput","minPassword","maxPassword","confirmedPasswordInput","matched","localeCompare","fullName","address","phoneNumber","validatePhoneNumber","email","confirmed_password","newUser","Logout","clearAuth","updateTotal","updateCartId","newTotal","cart_item_quantity","newCartItem","newCartList","splice","filter","App","updateOrderId","current_cart_id","current_order_id","event","path","exact","component","render","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35541f76.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nexport default class Navbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    <header className=\"main-header\">\r\n                        <nav className=\"main-header__nav\">\r\n                            <ul className=\"main-header__ul\">\r\n                                <li className=\"main-header__li\"><Link to=\"/\">Home</Link></li>\r\n                                <li className=\"main-header__li\"><Link to=\"/add-product\">Add Product</Link></li>\r\n                                {(this.props.current_user === '' || this.props.token === '') ?\r\n                                    [\r\n                                        <li key={\"login\"} className=\"main-header__li\"><Link to=\"/login\">Login</Link></li>,\r\n                                        <li key={\"register\"} className=\"main-header__li\"><Link to=\"/register\">Register</Link></li>\r\n                                    ]\r\n                                    :\r\n                                    <li className=\"main-header__li\"><Link to=\"/logout\">Logout</Link></li>\r\n                                }\r\n                                <li className=\"main-header__li\"><Link to=\"/cart\">Cart</Link></li>\r\n                                <li className=\"main-header__li\"><Link to=\"/order\">Orders</Link></li>\r\n                            </ul>\r\n                        </nav>\r\n                    </header>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Product = (props) => {\r\n    return (\r\n        <div className=\"product-detail\">\r\n            <div className=\"product-title\">\r\n                <h2>{props.title}</h2>\r\n            </div>\r\n            <div className=\"product-image\">\r\n                <Link to={`/product/${props.id}`}>\r\n                    <img src={`http://18.220.250.26:5010/imgs/${props.image}`} width=\"250px\" height=\"250px\" alt={props.title}></img>\r\n                </Link>\r\n            </div>\r\n            <div className=\"product-price\">\r\n                <p>${props.price}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport Product from '../Products/Product.Component';\r\nimport axios from 'axios';\r\nimport './Products.css';\r\n\r\nexport default class Products extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current_user: '',\r\n            products: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        axios.get('http://18.220.250.26:5010/products')\r\n            .then(response => {\r\n                this.setState({ products: response.data.map(product => product) })\r\n            })\r\n            .catch(error => {\r\n                console.log(`error: ${error}`);\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"product-list\">\r\n                {this.state.products.map(product => (\r\n                    <Product key={product.product_id}\r\n                        id={product.product_id}\r\n                        artist={product.artist_id}\r\n                        title={product.product_title}\r\n                        price={product.price}\r\n                        image={product.image_path}\r\n                    />\r\n                ))}\r\n                <footer>** All images are from <em>Pixabay</em> **</footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class OrderItem extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            order_items: [],\r\n            showDetails: false\r\n        }\r\n        this.toggleShowDetails = this.toggleShowDetails.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        axios.get(`http://18.220.250.26:5010/order/${this.props.order_id}`)\r\n            .then(result => {\r\n                this.setState({ order_items: result.data });\r\n            })\r\n    }\r\n\r\n    toggleShowDetails() {\r\n        this.setState({ showDetails: !this.state.showDetails });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.showDetails ?\r\n                    <div className=\"order-list\">\r\n                        <h3>Order Id: {this.props.order_id}</h3>\r\n                        <h3>Total: ${this.props.total}</h3>\r\n                    </div>\r\n                    :\r\n\r\n                    <div>\r\n                        <div className=\"order-list\">\r\n                            <h3>Order Id: {this.props.order_id}</h3>\r\n                            {this.state.order_items.map(item => (\r\n                                <div key={item.order_item_id}>\r\n                                    <h2>{item.product_title}</h2>\r\n                                    <img src={`http://18.220.250.26:5010/imgs/${item.image_path}`} width=\"250px\" height=\"250px\" alt={item.product_title}></img>\r\n                                    <h3>Price: ${item.price}</h3>\r\n                                    <h4>Quantity: {item.quantity}</h4>\r\n                                    <h5>Status: {item.status}</h5>\r\n                                </div>\r\n                            ))}\r\n                            <h3>Total: ${this.props.total}</h3>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <button onClick={this.toggleShowDetails}>Show Details</button>\r\n            </div >\r\n        )\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport OrderItem from './OrderItem.Component';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class Order extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            order_items: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this.props.current_user !== '') {\r\n            axios.get('http://18.220.250.26:5010/orders', {\r\n                params:\r\n                {\r\n                    current_user: this.props.current_user,\r\n                }\r\n            })\r\n                .then(result => {\r\n                    this.setState({ order_items: result.data });\r\n                })\r\n                .catch(error => {\r\n                    if (error) throw error;\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.current_user !== '' ?\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <h3>Orders History</h3>\r\n                        {this.state.order_items.map((item, index) =>\r\n                            (\r\n                                <OrderItem key={item.order_id}\r\n                                    current_user={this.props.current_user}\r\n                                    order_id={item.order_id}\r\n                                    index={index}\r\n                                    total={item.total}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <Redirect to=\"/login\" />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Cart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateCart = this.updateCart.bind(this);\r\n        this.deleteFromCart = this.deleteFromCart.bind(this);\r\n    }\r\n\r\n    updateCart(e) {\r\n        e.preventDefault();\r\n        const newQuantity = parseInt(e.target.quantity.value);\r\n        const quantityLabel = document.getElementById('quantityLabel');\r\n        const existingError = document.getElementById('quantityError');\r\n        if (newQuantity < 1) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Quantity must be greater than 0 **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'quantityError');\r\n\r\n                quantityLabel.parentElement.insertBefore(error, quantityLabel);\r\n                quantityLabel.nextSibling.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n            e.target.value = '';\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                quantityLabel.parentElement.removeChild(existingError);\r\n            }\r\n            quantityLabel.nextSibling.setAttribute(\"style\", \"border:default\");\r\n            this.props.updateQuantity(this.props.index, this.props.id, newQuantity);\r\n\r\n        }\r\n    }\r\n\r\n    deleteFromCart(e) {\r\n        e.preventDefault();\r\n        this.props.deleteItem(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"product-list\">\r\n                <h3>{this.props.title}</h3>\r\n                <h3>${this.props.price}</h3>\r\n                <img src={`http://18.220.250.26:5010/imgs/${this.props.image}`} width=\"250px\" height=\"250px\" alt={this.props.title}></img>\r\n                {this.props.updateQuantity !== '' ?\r\n                    <div>\r\n                        <form onSubmit={this.updateCart}>\r\n                            <label id=\"quantityLabel\">Quantity: </label>\r\n                            <input type=\"number\" name=\"quantity\" placeholder={this.props.quantity}></input>\r\n                            <p><button className=\"btn btn-success\" type=\"submit\">Update</button></p>\r\n\r\n                        </form>\r\n\r\n                        <form onSubmit={this.deleteFromCart}>\r\n                            <p><button className=\"btn btn-danger\" type=\"submit\">Delete</button></p>\r\n                        </form>\r\n\r\n                    </div>\r\n                    :\r\n                    <h4>Quantity: {this.props.quantity}</h4>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport CartItem from '../Cart/CartItem.Component';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class OrderForm extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cart_items: [],\r\n            total: 0,\r\n            redirectToOrders: false,\r\n        }\r\n        this.onSubmitOrderForm = this.onSubmitOrderForm.bind(this);\r\n        this.numbersOnly = this.numbersOnly.bind(this);\r\n        this.maxCreditNumberSize = this.maxCreditNumberSize.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this.props.current_user !== '') {\r\n            axios.get('http://18.220.250.26:5010/cart', {\r\n                params:\r\n                {\r\n                    current_user: this.props.current_user,\r\n                    cart_id: this.props.cart_id\r\n                }\r\n            })\r\n                .then(result => {\r\n                    this.setState({ cart_items: result.data.cart_items, total: parseFloat(result.data.total).toFixed(2) });\r\n                })\r\n                .catch(error => {\r\n                    if (error) throw error;\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    numbersOnly(input) {\r\n        const size = input.length;\r\n        for (let i = 0; i < size; ++i) {\r\n            if (input.charAt(i) !== '-' && (input.charCodeAt(i) < 48 || input.charCodeAt(i) > 57)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    maxCreditNumberSize(input) {\r\n        return input.length >= 10 && input.length <= 19;\r\n    }\r\n\r\n    validateCreditCard() {\r\n        const creditCard = document.getElementById('creditCardNumber');\r\n\r\n        const validCreditCard = this.numbersOnly(creditCard.value);\r\n        const validSize = this.maxCreditNumberSize(creditCard.value);\r\n\r\n        const existingError = document.getElementById('creditCardError');\r\n\r\n        const totalHeader = document.getElementById('totalHeader');\r\n\r\n        if (!validCreditCard || !validSize) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Please enter a valid credit card number **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'creditCardError');\r\n\r\n                totalHeader.parentElement.insertBefore(error, totalHeader.nextSibling);\r\n                creditCard.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n\r\n            }\r\n            creditCard.value = '';\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                totalHeader.parentElement.removeChild(existingError);\r\n            }\r\n            creditCard.setAttribute(\"style\", \"border:default\");\r\n            return creditCard.value;\r\n        }\r\n\r\n    }\r\n\r\n    onSubmitOrderForm(e) {\r\n        e.preventDefault();\r\n        const currentUser = this.props.current_user;\r\n        const paymentMethod = document.getElementById('paymentMethod');\r\n        const creditCardNumber = this.validateCreditCard();\r\n        const total = this.state.total;\r\n        const cartId = this.props.cart_id;\r\n\r\n        if (creditCardNumber) {\r\n            axios.post('http://18.220.250.26:5010/order_form', {\r\n                user: currentUser,\r\n                payment_method: paymentMethod.value,\r\n                credit_card_number: creditCardNumber,\r\n                total: total,\r\n                cart_id: cartId\r\n            })\r\n                .then(result => {\r\n                    this.setState({ redirectToOrders: true });\r\n                    this.props.clearCart();\r\n                    alert(`${result.data}`);\r\n                })\r\n                .catch(error => {\r\n                    if (error) throw error;\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.redirectToOrders ?\r\n                    this.state.total === '0.00' ?\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            <h3>Empty Cart</h3>\r\n                            <h5>Total: ${parseFloat(this.state.total).toFixed(2)}</h5>\r\n                        </div>\r\n                        :\r\n                        <div className=\"product-list\">\r\n                            {this.state.cart_items.map((item, index) =>\r\n                                (\r\n                                    <CartItem key={item.cart_item_id}\r\n                                        index={index}\r\n                                        title={item.product_title}\r\n                                        price={item.price}\r\n                                        image={item.image_path}\r\n                                        quantity={item.quantity}\r\n                                        updateQuantity={''}\r\n                                    />\r\n                                ))\r\n                            }\r\n                            <h3 id=\"totalHeader\">Total: ${parseFloat(this.state.total).toFixed(2)}</h3>\r\n                            <form onSubmit={this.onSubmitOrderForm}>\r\n                                <select name=\"paymentMethod\" id=\"paymentMethod\">\r\n                                    <option>Visa</option>\r\n                                    <option>Amex</option>\r\n                                    <option>MasterCard</option>\r\n                                </select>\r\n                                <label>Credit Card Number:</label>\r\n                                <input type=\"text\" name=\"creditCardNumber\" id=\"creditCardNumber\"></input>\r\n                                <p><button className=\"btn btn-info\" type=\"submit\">Submit Order</button></p>\r\n                            </form>\r\n                        </div>\r\n                    :\r\n                    <Redirect to=\"/order\" />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Products.css';\r\n\r\nexport default class ProductDetail extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product_id: props.match.params.id,\r\n            artist: '',\r\n            title: '',\r\n            image: '',\r\n            price: '',\r\n            date_created: '',\r\n\r\n        }\r\n        this.addToCart = this.addToCart.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        axios.get(`http://18.220.250.26:5010/product/` + this.state.product_id)\r\n            .then(response => {\r\n                const product = response.data[0];\r\n                this.setState({ artist: product.username, title: product.product_title, image: product.image_path, price: product.price, date_created: product.date_created });\r\n            })\r\n            .catch(error => {\r\n                console.log(`error: ${error}`);\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    addToCart(e) {\r\n        this.props.addToCart(e, this.state.product_id, this.state.title);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"product-list\">\r\n                <h2>{this.state.title}</h2>\r\n                <p><em>by {this.state.artist}</em></p>\r\n                <img src={`http://18.220.250.26:5010/imgs/${this.state.image}`} width=\"250px\" height=\"250px\" alt={this.state.title}></img>\r\n                <p>${this.state.price}</p>\r\n                <p>Created: {this.state.date_created.split('T')[0]}</p>\r\n\r\n                {this.props.current_user === '' ?\r\n                    <form action=\"/login\">\r\n                        <button type=\"submit\">Add to Cart</button>\r\n                    </form>\r\n                    :\r\n                    <form onSubmit={this.addToCart}>\r\n\r\n                        <button className=\"btn btn-info\" type=\"submit\">Add To Cart</button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class AddProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productImage: '',\r\n            redirectToHome: false\r\n        }\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n        this.validateTitle = this.validateTitle.bind(this);\r\n        this.validateImage = this.validateImage.bind(this);\r\n        this.validatePrice = this.validatePrice.bind(this);\r\n        this.uploadedError = this.uploadedError.bind(this);\r\n    }\r\n\r\n    clearError(e) {\r\n        e.target.setAttribute(\"style\", \"border:default\");\r\n    }\r\n\r\n\r\n    onFileChange(e) {\r\n        this.setState({ productImage: e.target.files[0] });\r\n    }\r\n\r\n    validateTitle() {\r\n        const titleLabel = document.getElementById('titleLabel');\r\n        const titleInput = document.getElementById('title_input');\r\n        let existingError = document.getElementById('titleError');\r\n\r\n        const min = 3, maxSize = 100;\r\n\r\n\r\n        if (titleInput.value.length < min || titleInput.value.length > maxSize) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Minimum of 3 and maximum of 100 alphanumeric characters are allowed **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'titleError');\r\n                titleLabel.parentElement.insertBefore(error, titleLabel);\r\n                titleInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                titleLabel.parentElement.removeChild(existingError);\r\n            }\r\n            titleInput.setAttribute(\"style\", \"border:default\");\r\n            return titleInput.value;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    validatePrice() {\r\n        const priceLabel = document.getElementById('priceLabel');\r\n        const priceInput = document.getElementById('price_input');\r\n        let existingError = document.getElementById('priceError');\r\n\r\n        const min = 1;\r\n\r\n\r\n        if (priceInput.value < min) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Price must be at least $1 **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'priceError');\r\n                priceLabel.parentElement.insertBefore(error, priceLabel);\r\n                priceInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                priceLabel.parentElement.removeChild(existingError);\r\n            }\r\n            priceInput.setAttribute(\"style\", \"border:default\");\r\n            return priceInput.value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    validateImage() {\r\n\r\n        const imageLabel = document.getElementById('imageLabel');\r\n        const imageInput = document.getElementById('image_input');\r\n        const uploaded = imageInput.files.length;\r\n        let existingError = document.getElementById('imageError');\r\n\r\n        if (uploaded === 0) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Please upload an image **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'imageError');\r\n                imageLabel.parentElement.insertBefore(error, imageLabel);\r\n                imageInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                imageLabel.parentElement.removeChild(existingError);\r\n            }\r\n            imageInput.setAttribute(\"style\", \"border:default\");\r\n            return this.state.productImage;\r\n        }\r\n    }\r\n\r\n    uploadedError(errorMessage) {\r\n        const imageLabel = document.getElementById('imageLabel');\r\n        const imageInput = document.getElementById('image_input');\r\n        let existingError = document.getElementById('imageError');\r\n\r\n        if (!existingError) {\r\n            let error = document.createElement(\"p\");\r\n            error.innerHTML = `** ${errorMessage} ** `;\r\n            error.setAttribute('style', 'color: red');\r\n            error.setAttribute('id', 'imageError');\r\n            imageLabel.parentElement.insertBefore(error, imageLabel);\r\n            imageInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                imageLabel.parentElement.removeChild(existingError);\r\n            }\r\n            imageInput.setAttribute(\"style\", \"border:default\");\r\n            return this.state.productImage;\r\n        }\r\n    }\r\n\r\n    existingProduct(errorMessage) {\r\n        const titleInput = document.getElementById('title_input');\r\n        const existingError = document.getElementById('titleError');\r\n        titleInput.value = '';\r\n\r\n        if (!existingError) {\r\n            let error = document.createElement(\"p\");\r\n            error.innerHTML = errorMessage;\r\n            error.setAttribute('style', 'color: red');\r\n            error.setAttribute('id', 'titleError');\r\n            titleInput.parentElement.insertBefore(error, titleInput.nextSibling);\r\n            titleInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                titleInput.parentElement.removeChild(existingError);\r\n            }\r\n            titleInput.setAttribute(\"style\", \"border:default\");\r\n            return titleInput.value;\r\n        }\r\n\r\n    }\r\n\r\n    onFormSubmit(e) {\r\n        e.preventDefault();\r\n        const title = this.validateTitle();\r\n\r\n        const price = this.validatePrice();\r\n\r\n        const productImage = this.validateImage();\r\n\r\n        if (title && price && productImage) {\r\n            const formData = new FormData();\r\n            formData.append('productImage', productImage);\r\n            formData.append('artist_id', this.props.current_user);\r\n            formData.append('title', title);\r\n            formData.append('price', price);\r\n\r\n            axios.post('http://18.220.250.26:5010/add-product', formData)\r\n                .then(result => {\r\n                    if (result.data.hasOwnProperty('error')) {\r\n                        this.uploadedError(result.data.error);\r\n                    }\r\n                    else if (result.data.hasOwnProperty('title')) {\r\n                        this.existingProduct(result.data.title);\r\n                    }\r\n                    else {\r\n                        this.setState({ redirectToHome: true });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if (error) throw error;\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.redirectToHome ?\r\n                    <Redirect to=\"/\" />\r\n                    :\r\n                    this.props.current_user !== '' ?\r\n                        <div className=\"add-product-form\">\r\n                            <form method=\"POST\" encType=\"multipart/form-data\" onSubmit={this.onFormSubmit}>\r\n                                <label id=\"titleLabel\">Title:</label>\r\n                                <input type=\"text\" name=\"title\" id=\"title_input\" onFocus={this.clearError}></input>\r\n                                <div>\r\n                                    <label id=\"priceLabel\">Price:</label>\r\n                                    <input type=\"number\" name=\"price\" id=\"price_input\" onFocus={this.clearError}></input>\r\n                                </div>\r\n                                <div>\r\n                                    <label id=\"imageLabel\">Image:</label>\r\n                                    <input type=\"file\" name=\"image\" id=\"image_input\" onFocus={this.clearError} onChange={this.onFileChange}></input>\r\n                                </div>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Submit</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                        :\r\n                        <Redirect to=\"/login\" />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.submitLogin = this.submitLogin.bind(this);\r\n        this.userNotExists = this.userNotExists.bind(this);\r\n        this.invalidLogin = this.invalidLogin.bind(this);\r\n    }\r\n\r\n    submitLogin(e) {\r\n        e.preventDefault();\r\n        const username = document.getElementById('username_input').value;\r\n        const password = document.getElementById('password_input').value;\r\n        axios.post('http://18.220.250.26:5010/login',\r\n            {\r\n                username: username,\r\n                password: password\r\n            }\r\n        )\r\n            .then(result => {\r\n                if (result.data.hasOwnProperty('user_error')) {\r\n                    console.log('user not exists');\r\n                    this.userNotExists();\r\n                }\r\n                else if (result.data.hasOwnProperty('error')) {\r\n                    console.log('invalid login');\r\n                    this.invalidLogin();\r\n                }\r\n                else {\r\n                    const result_token = result.data.token;\r\n                    const result_id = result.data.user_id;\r\n                    this.props.updateAuth(result_token, result_id);\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                if (error) throw error;\r\n            });\r\n    }\r\n\r\n    userNotExists() {\r\n        const usernameInput = document.getElementById('usernameLabel');\r\n        let existingError = document.getElementById('usernameError');\r\n        usernameInput.nextSibling.value = '';\r\n\r\n        if (existingError) {\r\n            usernameInput.parentElement.removeChild(existingError);\r\n            existingError = null;\r\n        }\r\n\r\n        if (!existingError) {\r\n            let error = document.createElement(\"p\");\r\n            error.innerHTML = \"** Username does not exists **\";\r\n            error.setAttribute('style', 'color: red');\r\n            error.setAttribute('id', 'usernameError');\r\n            usernameInput.parentElement.insertBefore(error, usernameInput);\r\n        }\r\n    }\r\n\r\n    invalidLogin() {\r\n        const usernameInput = document.getElementById('usernameLabel');\r\n        let existingError = document.getElementById('usernameError');\r\n        const passwordInput = document.getElementById('password_input');\r\n        passwordInput.value = ''\r\n\r\n        if (existingError) {\r\n            usernameInput.parentElement.removeChild(existingError);\r\n            existingError = null;\r\n        }\r\n\r\n        if (!existingError) {\r\n            let error = document.createElement(\"p\");\r\n            error.innerHTML = \"** Invalid username/password **\";\r\n            error.setAttribute('style', 'color: red');\r\n            error.setAttribute('id', 'usernameError');\r\n            usernameInput.parentElement.insertBefore(error, usernameInput);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"product-list\">\r\n                {this.props.current_user !== '' && this.props.token !== '' ?\r\n                    <Redirect to=\"/\" />\r\n                    :\r\n                    <form method=\"POST\" onSubmit={this.submitLogin}>\r\n                        <label id=\"usernameLabel\">UserName:</label>\r\n                        <input type=\"text\" name=\"username\" id=\"username_input\" required ></input>\r\n                        <p><label>Password:</label>\r\n                            <input type=\"password\" name=\"password\" id=\"password_input\" required ></input>\r\n                        </p>\r\n                        <button className=\"btn btn-success\" type=\"submit\">Log In</button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.register = this.register.bind(this);\r\n        this.validateAddress = this.validateAddress.bind(this);\r\n        this.validateUsername = this.validateUsername.bind(this);\r\n        this.validateEmail = this.validateEmail.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n        this.validateConfirmedPassword = this.validateConfirmedPassword.bind(this);\r\n        this.existingUsername = this.existingUsername.bind(this);\r\n        this.existingEmail = this.existingEmail.bind(this);\r\n\r\n\r\n        this.validMin = this.validMin.bind(this);\r\n        this.validChars = this.validChars.bind(this);\r\n        this.validMax = this.validMax.bind(this);\r\n        this.validateName = this.validateName.bind(this);\r\n        this.clearError = this.clearError.bind(this);\r\n    }\r\n\r\n\r\n    validMin(input) {\r\n        return input.length >= 3;\r\n    }\r\n\r\n    validChars(input) {\r\n        const valid = true;\r\n        for (let i = 0; i < input.length; ++i) {\r\n            if (input.charCodeAt(i) !== 32 && (input.charCodeAt(i) < 65 || (input.charCodeAt(i) > 90 && input.charCodeAt(i) < 97) || (input.charCodeAt(i) > 122))) {\r\n                return false;\r\n            }\r\n        }\r\n        return valid;\r\n    }\r\n\r\n    validMax(maxSize, input) {\r\n        return input.length <= maxSize;\r\n    }\r\n\r\n    clearError(e) {\r\n        const siblingNode = e.target.nextSibling;\r\n        if (siblingNode !== null && siblingNode.nodeName === \"P\") {\r\n            e.target.parentElement.removeChild(siblingNode);\r\n            e.target.setAttribute(\"style\", \"border:default\");\r\n        }\r\n    }\r\n\r\n    validateName() {\r\n        const fullNameInput = document.getElementById('full_name_input');\r\n        const minRequired = this.validMin(fullNameInput.value);\r\n        const charactersOnly = this.validChars(fullNameInput.value);\r\n        const maximum = 50;\r\n        const maxRequired = this.validMax(maximum, fullNameInput.value);\r\n        const existingError = document.getElementById('nameError');\r\n        if (!minRequired || !charactersOnly || !maxRequired) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Minimum of 3 and maximum of 50 alphabet characters are allowed **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'nameError');\r\n                fullNameInput.parentElement.insertBefore(error, fullNameInput.nextSibling);\r\n                fullNameInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n            fullNameInput.value = '';\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                fullNameInput.parentElement.removeChild(existingError);\r\n            }\r\n            fullNameInput.setAttribute(\"style\", \"border:default\");\r\n            return fullNameInput.value;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    validateAddress() {\r\n        const addressInput = document.getElementById('address_input');\r\n        const minRequired = this.validMin(addressInput.value);\r\n        const maximum = 100;\r\n        const maxRequired = this.validMax(maximum, addressInput.value);\r\n        const existingError = document.getElementById('addressError');\r\n        if (!minRequired || !maxRequired) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Minimum of 3 and maximum of 100 characters are allowed **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'addressError');\r\n\r\n                addressInput.parentElement.insertBefore(error, addressInput.nextSibling);\r\n                addressInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n            addressInput.value = '';\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                addressInput.parentElement.removeChild(existingError);\r\n            }\r\n            addressInput.setAttribute(\"style\", \"border:default\");\r\n            return addressInput.value;\r\n        }\r\n    }\r\n\r\n    existingUsername() {\r\n        const usernameInput = document.getElementById('username_input');\r\n        const existingError = document.getElementById('usernameError');\r\n\r\n        usernameInput.value = '';\r\n        if (!existingError) {\r\n            let error = document.createElement(\"p\");\r\n            error.innerHTML = \"** Username already exists **\";\r\n            error.setAttribute('style', 'color: red');\r\n            error.setAttribute('id', 'usernameError');\r\n            usernameInput.parentElement.insertBefore(error, usernameInput.nextSibling);\r\n            usernameInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                usernameInput.parentElement.removeChild(existingError);\r\n            }\r\n            usernameInput.setAttribute(\"style\", \"border:default\");\r\n            return usernameInput.value;\r\n        }\r\n\r\n    }\r\n\r\n    existingEmail() {\r\n        const emailInput = document.getElementById('email_input');\r\n        const existingError = document.getElementById('emailError');\r\n        emailInput.value = '';\r\n\r\n        if (!existingError) {\r\n            let error = document.createElement(\"p\");\r\n            error.innerHTML = \"** Email already exists **\";\r\n            error.setAttribute('style', 'color: red');\r\n            error.setAttribute('id', 'emailError');\r\n            emailInput.parentElement.insertBefore(error, emailInput.nextSibling);\r\n            emailInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                emailInput.parentElement.removeChild(existingError);\r\n            }\r\n            emailInput.setAttribute(\"style\", \"border:default\");\r\n            return emailInput.value;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    numbersOnly(input) {\r\n        const size = input.length;\r\n        for (let i = 0; i < size; ++i) {\r\n            if (input.charAt(i) !== '-' && (input.charCodeAt(i) < 48 || input.charCodeAt(i) > 57)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validNumber(input) {\r\n        const size = input.length, maxSize = 12;\r\n        const firstHyphen = 3, secondHyphen = 7;\r\n        return (size === maxSize && input.charAt(firstHyphen) === '-' && input.charAt(secondHyphen) === '-');\r\n    }\r\n\r\n    validatePhoneNumber() {\r\n        const phoneNumberInput = document.getElementById('phone_number_input');\r\n        const onlyNumbers = this.numbersOnly(phoneNumberInput.value);\r\n        const valid = this.validNumber(phoneNumberInput.value);\r\n        const existingError = document.getElementById('phoneError');\r\n\r\n        if (!onlyNumbers || !valid) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Please enter a valid phone number ###-###-#### **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'phoneError');\r\n                phoneNumberInput.parentElement.insertBefore(error, phoneNumberInput.nextSibling);\r\n                phoneNumberInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n            phoneNumberInput.value = '';\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                phoneNumberInput.parentElement.removeChild(existingError);\r\n            }\r\n            phoneNumberInput.setAttribute(\"style\", \"border:default\");\r\n            return phoneNumberInput.value;\r\n        }\r\n    }\r\n\r\n    alphaNumeric(input) {\r\n        const size = input.length;\r\n        const lowNumber = 48, highNumber = 57, lowUpperCase = 65, highUpperCase = 90, firstLowerCase = 97, lastLowerCase = 122;\r\n        for (let i = 0; i < size; ++i) {\r\n            if (input.charCodeAt(i) < lowNumber || (input.charCodeAt(i) > highNumber && input.charCodeAt(i) < lowUpperCase) || (input.charCodeAt(i) > highUpperCase && input.charCodeAt(i) < firstLowerCase) || (input.charCodeAt(i) > lastLowerCase)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validateUsername() {\r\n        const usernameInput = document.getElementById('username_input');\r\n        const maxSize = 30;\r\n        const numericAlpha = this.alphaNumeric(usernameInput.value);\r\n        const minRequired = this.validMin(usernameInput.value);\r\n        const maxRequired = this.validMax(maxSize, usernameInput.value);\r\n        const existingError = document.getElementById('usernameError');\r\n\r\n        if (!numericAlpha || !minRequired || !maxRequired) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Minimum of 3 and maximum of 30 alphanumeric characters are allowed **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'usernameError');\r\n                usernameInput.parentElement.insertBefore(error, usernameInput.nextSibling);\r\n                usernameInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n            usernameInput.value = '';\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                usernameInput.parentElement.removeChild(existingError);\r\n            }\r\n            usernameInput.setAttribute(\"style\", \"border:default\");\r\n            return usernameInput.value;\r\n        }\r\n    }\r\n\r\n    validateEmail() {\r\n        const emailInput = document.getElementById('email_input');\r\n        const minEmail = emailInput.value.length >= 6;\r\n        const maxSize = 50;\r\n        const maxRequired = this.validMax(maxSize, emailInput.value);\r\n        const existingError = document.getElementById('emailError');\r\n\r\n        if (!minEmail || !maxRequired) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Minimum of 10 and maximum up to 50 alphanumeric characters are allowed **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'emailError');\r\n                emailInput.parentElement.insertBefore(error, emailInput.nextSibling);\r\n                emailInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n            emailInput.value = '';\r\n        }\r\n        else {\r\n            if (existingError) {\r\n                emailInput.parentElement.removeChild(existingError);\r\n            }\r\n            emailInput.setAttribute(\"style\", \"border:default\");\r\n            return emailInput.value;\r\n        }\r\n    }\r\n\r\n\r\n    validatePassword() {\r\n        const passwordInput = document.getElementById('password_input');\r\n        const minPassword = (passwordInput.value.length >= 10), maxPassword = (passwordInput.value.length <= 60);\r\n        const existingError = document.getElementById('passwordError');\r\n\r\n        if (!minPassword || !maxPassword) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Minimum of 10 and maximum of 60 characters **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'addressError');\r\n                passwordInput.parentElement.insertBefore(error, passwordInput.nextSibling);\r\n                passwordInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n            passwordInput.value = '';\r\n        }\r\n        else {\r\n            const existingError = document.getElementById('passwordError');\r\n            if (existingError) {\r\n                passwordInput.parentElement.removeChild(existingError);\r\n            }\r\n            passwordInput.setAttribute(\"style\", \"border:default\");\r\n            return passwordInput.value;\r\n        }\r\n\r\n    }\r\n    validateConfirmedPassword(e) {\r\n        const passwordInput = document.getElementById('password_input');\r\n        const confirmedPasswordInput = document.getElementById('confirmed_password_input');\r\n        const matched = confirmedPasswordInput.value.localeCompare(passwordInput.value);\r\n        const existingError = document.getElementById('passwordError');\r\n\r\n        if (matched) {\r\n            if (!existingError) {\r\n                let error = document.createElement(\"p\");\r\n                error.innerHTML = \"** Passwords must be matched **\";\r\n                error.setAttribute('style', 'color: red');\r\n                error.setAttribute('id', 'addressError');\r\n                confirmedPasswordInput.parentElement.insertBefore(error, confirmedPasswordInput.nextSibling);\r\n                confirmedPasswordInput.setAttribute(\"style\", \"border: 1px solid red; box-shadow: 0 0 10px rgb(255, 0, 0)\");\r\n            }\r\n            confirmedPasswordInput.value = '';\r\n        }\r\n        else {\r\n            const existingError = document.getElementById('confirmedPasswordError');\r\n            if (existingError) {\r\n                confirmedPasswordInput.parentElement.removeChild(existingError);\r\n            }\r\n            confirmedPasswordInput.setAttribute(\"style\", \"border:default\");\r\n            return confirmedPasswordInput.value;\r\n        }\r\n\r\n    }\r\n    register(e) {\r\n        e.preventDefault();\r\n        const fullName = this.validateName();\r\n        const address = this.validateAddress();\r\n        const phoneNumber = this.validatePhoneNumber();\r\n        const username = this.validateUsername();\r\n        const email = this.validateEmail();\r\n        const password = this.validatePassword();\r\n        const confirmed_password = this.validateConfirmedPassword();\r\n\r\n        if (fullName && address && phoneNumber && username && email && password && confirmed_password) {\r\n            const newUser = {\r\n                fullName: fullName,\r\n                address: address,\r\n                phoneNumber: phoneNumber,\r\n                username: username,\r\n                email: email,\r\n                password: password\r\n            };\r\n\r\n            axios.post(\"http://18.220.250.26:5010/register\", newUser)\r\n                .then(result => {\r\n                    if (result.data.hasOwnProperty('username')) {\r\n                        this.existingUsername();\r\n                    }\r\n                    else if (result.data.hasOwnProperty('email')) {\r\n                        this.existingEmail();\r\n                    }\r\n                    this.props.updateAuth('', result.data.user_id);\r\n                })\r\n                .catch(error => {\r\n                    if (error) throw error;\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.current_user ?\r\n                    <Redirect to=\"/login\" />\r\n                    :\r\n                    <div className=\"text-center\">\r\n                        <form method=\"POST\" onSubmit={this.register}>\r\n                            <label>Full Name:</label>\r\n                            <input type=\"text\" name=\"full_name\" id=\"full_name_input\" onFocus={this.clearError} required></input>\r\n                            <div>\r\n                                <label>Address:</label>\r\n                                <input type=\"text\" name=\"address\" id=\"address_input\" onFocus={this.clearError} required ></input>\r\n                            </div>\r\n                            <div>\r\n                                <label>Phone Number:</label>\r\n                                <input type=\"text\" name=\"phone_number\" id=\"phone_number_input\" onFocus={this.clearError} required ></input>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <label>Username:</label>\r\n                                <input type=\"text\" name=\"username\" id=\"username_input\" onFocus={this.clearError} required></input>\r\n                                <label>Email:</label>\r\n                                <input type=\"email\" name=\"email\" id=\"email_input\" onFocus={this.clearError} required></input>\r\n                            </div>\r\n                            <div>\r\n                                <label>Password:</label>\r\n                                <input type=\"password\" name=\"password\" id=\"password_input\" onFocus={this.clearError} required></input>\r\n                                <label>Confirmed Password:</label>\r\n                                <input type=\"password\" name=\"confirmed_password\" id=\"confirmed_password_input\" onFocus={this.clearError} required ></input>\r\n                            </div>\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Register</button>\r\n                        </form>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nexport default class Logout extends React.Component {\r\n    _isMounted = false;\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.props.clearAuth();\r\n        this.props.clearCart();\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Redirect to=\"/\" />\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport CartItem from './CartItem.Component';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport './Cart.css';\r\n\r\nexport default class Cart extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cart_items: [],\r\n            total: 0\r\n        }\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n        this.updateTotal = this.updateTotal.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this.props.current_user !== '') {\r\n            axios.get('http://18.220.250.26:5010/cart', {\r\n                params:\r\n                {\r\n                    current_user: this.props.current_user,\r\n                    cart_id: this.props.cart_id\r\n                }\r\n            })\r\n                .then(result => {\r\n                    this.setState({ cart_items: result.data.cart_items, total: parseFloat(result.data.total).toFixed(2) });\r\n                    this.props.updateCartId(result.data.cart_id);\r\n                })\r\n                .catch(error => {\r\n                    if (error) throw error;\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    updateTotal() {\r\n        let newTotal = 0;\r\n        for (let i = 0; i < this.state.cart_items.length; ++i) {\r\n            newTotal += this.state.cart_items[i].price * this.state.cart_items[i].quantity;\r\n        }\r\n        this.setState({ total: parseFloat(newTotal).toFixed(2) });\r\n    }\r\n\r\n    updateQuantity(index, cart_item_id, newQuantity) {\r\n        const product_id = this.state.cart_items[index].product_id;\r\n        axios.post('http://18.220.250.26:5010/cart', {\r\n            product_id: product_id,\r\n            cart_item_id: cart_item_id,\r\n            cart_item_quantity: newQuantity,\r\n            cart_id: this.props.cart_id\r\n        })\r\n            .then(result => {\r\n                let newCartItem = this.state.cart_items[index];\r\n                newCartItem.quantity = newQuantity;\r\n\r\n                let newCartList = this.state.cart_items;\r\n                newCartList.splice(index, 1, newCartItem);\r\n\r\n                this.setState({ cart_items: newCartList });\r\n                this.updateTotal();\r\n            })\r\n            .catch(error => {\r\n                if (error) {\r\n                    throw error;\r\n                };\r\n            });\r\n\r\n    }\r\n\r\n    deleteItem(cart_item_id) {\r\n        axios.post(`http://18.220.250.26:5010/delete-cart-item/${cart_item_id}`)\r\n            .then(result => {\r\n                this.setState({ cart_items: this.state.cart_items.filter(item => item.cart_item_id !== cart_item_id) });\r\n                this.updateTotal();\r\n                alert(`${result.data}`);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.current_user !== '' ?\r\n                    this.state.total === '0.00' ?\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            <h3>Empty Cart</h3>\r\n                            <h5>Total: ${parseFloat(this.state.total).toFixed(2)}</h5>\r\n                        </div>\r\n                        :\r\n                        <div className=\"product-list\">\r\n                            {this.state.cart_items.map((item, index) =>\r\n                                (\r\n                                    <CartItem key={item.cart_item_id}\r\n                                        id={item.cart_item_id}\r\n                                        index={index}\r\n                                        title={item.product_title}\r\n                                        price={item.price}\r\n                                        image={item.image_path}\r\n                                        quantity={item.quantity}\r\n                                        updateQuantity={this.updateQuantity}\r\n                                        deleteItem={this.deleteItem}\r\n                                    />\r\n                                ))\r\n                            }\r\n                            <h3>Total: ${parseFloat(this.state.total).toFixed(2)}</h3>\r\n                            <Link to=\"/order-form\"><button className=\"btn btn-primary\">Checkout</button></Link>\r\n                        </div>\r\n                    :\r\n                    <Redirect to=\"/login\" />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from '../src/components/Navbar/Navbar.Component';\nimport Products from '../src/components/Products/Products.Component';\nimport Order from '../src/components/Order/Orders.Component';\nimport OrderForm from '../src/components/Order/OrderForm.Component';\nimport ProductDetail from '../src/components/Products/ProductDetail.Component';\nimport AddProduct from '../src/components/Products/AddProduct.Component';\nimport Login from '../src/components/Authentication/Login.Component';\nimport Register from '../src/components/Authentication/Register.Component';\nimport Logout from '../src/components/Authentication/Logout.Component';\nimport Cart from '../src/components/Cart/Cart.Component';\nimport axios from 'axios';\n\nimport './App.css';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: '',\n      current_user: '',\n      cart_id: '',\n      order_id: ''\n    }\n    this.updateAuth = this.updateAuth.bind(this);\n    this.clearAuth = this.clearAuth.bind(this);\n    this.clearCart = this.clearCart.bind(this);\n    this.addToCart = this.addToCart.bind(this);\n    this.updateCartId = this.updateCartId.bind(this);\n    this.updateOrderId = this.updateOrderId.bind(this);\n  }\n\n  clearAuth() {\n    this.setState({ token: '', current_user: '' });\n  }\n\n  clearCart() {\n    this.setState({ cart_id: '' });\n  }\n\n  updateAuth(token, current_user) {\n    this.setState({ token: token, current_user: current_user });\n  }\n\n  updateCartId(current_cart_id) {\n    this.setState({ cart_id: current_cart_id });\n  }\n\n  updateOrderId(current_order_id) {\n    this.setState({ order_id: current_order_id });\n  }\n\n  addToCart(event, product_id, product_title) {\n    event.preventDefault();\n    alert(`${product_title} added to cart`);\n    axios.post(`http://18.220.250.26:5010/add-to-cart`,\n      {\n        token: this.state.token,\n        cart_id: this.state.cart_id,\n        current_user: this.state.current_user,\n        product_id: product_id\n      })\n      .then(response => {\n        this.setState({ cart_id: response.data });\n      })\n      .catch(error => {\n        if (error) throw error;\n      });\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <Navbar token={this.state.token} current_user={this.state.current_user} />\n        <Route path=\"/\" exact component={Products} />\n        <Route path=\"/login\" render={() =>\n          <Login token={this.state.token} current_user={this.state.current_user} updateAuth={this.updateAuth} />\n        } />\n        <Route path=\"/logout\" render={() =>\n          <Logout token={this.state.token} current_user={this.state.current_user} clearAuth={this.clearAuth} clearCart={this.clearCart} />\n        } />\n\n        <Route path=\"/register\" render={() =>\n          <Register current_user={this.state.current_user} updateAuth={this.updateAuth} />\n        } />\n\n        <Route path=\"/add-product\" render={() =>\n          <AddProduct current_user={this.state.current_user} />\n        } />\n\n        <Route path=\"/cart\" render={() =>\n          <Cart token={this.state.token} current_user={this.state.current_user} cart_id={this.state.cart_id} updateCartId={this.updateCartId} />\n        } />\n\n        <Route path=\"/add-to-cart\"\n          render={() => <Cart token={this.state.token} current_user={this.state.current_user} cart_id={this.state.cart_id} updateCartId={this.updateCartId} />}\n        />\n\n        <Route path=\"/order-form\"\n          render={() => <OrderForm token={this.state.token} current_user={this.state.current_user} cart_id={this.state.cart_id} clearCart={this.clearCart} />}\n        />\n\n        <Route path=\"/product/:id\"\n          render={props => <ProductDetail token={this.state.token} current_user={this.state.current_user} addToCart={this.addToCart} {...props} />}\n        />\n\n        <Route path=\"/order\"\n          render={props => <Order current_user={this.state.current_user} {...props} />}\n        />\n\n      </Router>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}